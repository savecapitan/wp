fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m max_size=1g inactive=60m use_temp_path=off;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500 http_502 http_503 http_504;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

upstream php {
    server wordpress:9000;
}

server {
  listen          80;
  listen          [::]:80;
  server_name     ${URL}, ${URL_WWW};
  server_tokens   off;
  # Logging
  access_log  /var/log/nginx/access.log;
  error_log   /var/log/nginx/error.log;

  # root configuration
  root /var/www/html;
  index index.php;

  # Access WordPress 
  location / {
    # include the "?$args" part so non-default permalinks don't break when using query string
    try_files $uri $uri/ /index.php?$args;
  }

  # Enable Gzip compression
  gzip          on;

  # Compression level (1-9)
  gzip_comp_level     5;

  # Don't compress anything under 256 bytes
  gzip_min_length     256;

  # Compress output of these MIME-types
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-font-opentype
    application/x-font-truetype
    application/x-javascript
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/eot
    font/opentype
    font/otf
    image/svg+xml
    image/x-icon
    image/vnd.microsoft.icon
    text/css
    text/plain
    text/javascript
    text/x-component;

  # Disable gzip for bad browsers
  gzip_disable  "MSIE [1-6]\.(?!.*SV1)";

  # Restrictions
  # Disable logging for favicon and robots.txt
  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  # Robots
  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # stop robots at wp-admin
  location @robots {
    return 200 "User-agent: *\nDisallow: /wp-admin/\nAllow: /wp-admin/admin-ajax.php\n";
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\. {
    deny all;
  }

  # Deny access to any files with a .php extension in the uploads directory
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

  # Deny access to Wordfence .user.ini
  location ~ ^/\.user\.ini {
    deny all;
  }
  # End Restrictions

  # Caching
  set $skip_cache 0;

  # POST requests and urls with a query string should always go to PHP
  if ($request_method = POST) {
    set $no_cache 1;
  }

  if ($query_string != "") {
    set $skip_cache 1;
  }

  # Don't cache uris containing the following segments
  if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
    set $skip_cache 1;
  }

  # Don't use the cache for logged in users or recent commenters
  if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
    set $skip_cache 1;
  }
  #end Caching

  # Add support for subdirectory structure in WordPress Multisite
  if (!-e $request_filename) {
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    rewrite ^(/[^/]+)?(/wp-.*) $2 last;
    rewrite ^(/[^/]+)?(/.*.php) $2 last;
  }

  # Add trailing slash to */wp-admin requests.
  rewrite /wp-admin$ $scheme://$host$uri/ permanent;

  # Directives to send expires headers and turn off 404 error logging.
  location ~* ^.+\.(eot|otf|woff|woff2|ttf|rss|atom|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
    access_log off; log_not_found off; expires max;
  }

  # Media: images, icons, video, audio send expires headers.
  location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$ {
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
  }

  # CSS and Javascript send expires headers.
  location ~* \.(?:css|js)$ {
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
  }

  # HTML send expires headers.
  location ~* \.(html)$ {
    expires 7d;
    access_log off;
    add_header Cache-Control "public";
  }

  # Browser caching of static assets.
  location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf)$ {
    expires 1y;
    add_header Cache-Control "public, no-transform";
  }

  location = /xmlrpc.php {
    deny all;
  }

  # Pass all .php files onto a php-fpm/php-fcgi server.
  location ~ \.php$ {
    #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
    include fastcgi_params;
    fastcgi_intercept_errors  on;
    fastcgi_pass              php;
    fastcgi_param             SCRIPT_FILENAME $document_root$fastcgi_script_name;

    fastcgi_cache_bypass      $skip_cache;
    fastcgi_no_cache          $skip_cache;
    fastcgi_cache             WORDPRESS;
    fastcgi_cache_valid       200 301 302 60m;
    fastcgi_cache_min_uses    1;
    fastcgi_cache_lock        on;
    add_header X-WP-Cache     $upstream_cache_status;
  }
}